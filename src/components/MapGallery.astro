---
import { promises as fs } from 'fs';
import path from 'path';
import Papa from 'papaparse';
import FilterableGallery from './FilterableGallery.tsx';

import type { Map } from './FilterableGallery.tsx';

// 1. Define the path to your CSV file
const csvPath = path.join(process.cwd(), 'src/content/docs/conference/map-gallery/submissions.csv');

// 2. Read the file contents from the disk
const csvFile = await fs.readFile(csvPath, 'utf-8');

// 3. Parse the CSV data into an array of objects
const parseResult = Papa.parse(csvFile, {
  header: true, // Use the first row as object keys
  skipEmptyLines: true,
});
const allMaps = parseResult.data as Map[];
---

<div class="map-gallery-container not-content">
  <p>A collection of interactive and static maps from the BTAA GIN Conference.</p>
  <FilterableGallery client:load maps={allMaps} />
</div>

<style>
  :global(.map-gallery-container > p) {
  font-size: 1.1rem; /* Slightly larger text */
  color: var(--sl-color-gray-3);
  margin-bottom: 2rem; /* Adds space below the paragraph */
}

/* Updated styles for the filter controls */
:global(.filter-controls) {
  display: flex; /* Aligns the label and select box in a row */
  align-items: center; /* Vertically centers the text with the select box */
  gap: 0.75rem; /* Adds space BETWEEN the label and the select box */
  margin-bottom: 2.5rem; /* Adds space below the entire filter control */
}

:global(.filter-controls label) {
  font-weight: 500;
}

:global(.filter-controls select) {
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  border: 1px solid var(--sl-color-hairline);
  background-color: var(--sl-color-bg);
}
  /* --- Grid & Card Styling --- */
  /* We use :global() so these styles can apply to the React component's output */

  :global(.gallery-grid) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  :global(.project-card) {
    background-color: var(--sl-color-bg);
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    overflow: hidden;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  :global(.project-card:hover) {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.15);
  }

  :global(.card-image) {
    width: 100%;
    height: 200px;
    object-fit: cover;
  }

  :global(.card-content) {
    padding: 1rem;
  }

  :global(.card-content h3) {
    margin: 0 0 0.5rem;
    font-size: 1.1rem;
  }
  
  :global(.card-content h4) {
    margin: 0;
    font-size: 0.9rem;
    color: #666;
    font-weight: normal;
  }

  /* --- Modal Styling --- */
   :global(.modal-backdrop) {
    position: fixed;
    top: 0;
    left: var(--sl-sidebar-width);
    width: calc(100% - var(--sl-sidebar-width));
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
    opacity: 0; /* Start invisible */
    pointer-events: none; /* Don't block clicks when invisible */
    transition: opacity .5s ease-out; /* Smooth transition for opacity over 0.3 seconds */
  }
  :global(.modal-backdrop[data-visible="true"]) {
    opacity: 1; /* Fully visible */
    pointer-events: auto; /* Allow clicks */
  }


  :global(.modal-content) {

    background-color: var(--sl-color-bg);
    color: var(--sl-color-text);
    padding: 2rem;
    border-radius: 8px;
    max-width: 800px;
    max-height: 90vh;
    overflow-y: auto;
    position: relative;
  }

  :global(.modal-close) {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 4rem;
    cursor: pointer;
    color: #333;
  }

  :global(.modal-image) {
    width: 25%;
    max-height: 300px;
    object-fit: contain;
    margin: .5rem;
    float: left;
  }

  :global(.modal-link-card) {
  display: block;
  margin-top: 1.5rem;
  padding: 1rem;
  border: 1px solid var(--sl-color-hairline);
  border-radius: 0.5rem;
  color: var(--sl-color-text);
  text-decoration: none;
  transition: border-color 0.2s ease-out, background-color 0.2s ease-out;
}

:global(.modal-link-card:hover) {
  background-color: var(--sl-color-hover);
  border-color: var(--sl-color-accent);
}
</style>