---
import ArticleMeta from './ArticleMeta.astro';

const PAGE_TITLE_ID = 'page-title';

const route = Astro.locals.starlightRoute;
const entry = route.entry;
const data = entry.data as Record<string, unknown>;

const id = entry.id ?? '';
const showMeta = ['posts/', 'updates/', 'library/'].some((prefix) => id.startsWith(prefix));
const isLibraryEntry = id.startsWith('library/');

const normalizeAuthors = (raw: unknown): string[] => {
  if (!Array.isArray(raw)) return [];
  return raw
    .map((author) => {
      if (typeof author === 'string') return author.trim();
      if (author && typeof author === 'object' && 'name' in author && typeof author.name === 'string') {
        return author.name.trim();
      }
      return '';
    })
    .filter((name) => name.length > 0);
};

const normalizeTags = (raw: unknown): string[] => {
  if (!Array.isArray(raw)) return [];
  return raw
    .map((tag) => String(tag).trim())
    .filter((tag) => tag.length > 0);
};

const toDate = (value: unknown): Date | undefined => {
  if (!value) return undefined;
  const date = new Date(String(value));
  return Number.isNaN(date.valueOf()) ? undefined : date;
};

const toYear = (value: unknown): number | undefined => {
  if (typeof value === 'number' && Number.isInteger(value)) return value;
  if (typeof value === 'string') {
    const trimmed = value.trim();
    if (/^\d{4}$/.test(trimmed)) {
      const parsed = Number.parseInt(trimmed, 10);
      if (!Number.isNaN(parsed)) return parsed;
    }
  }
  return undefined;
};

const toDescription = (value: unknown): string | undefined => {
  if (typeof value !== 'string') return undefined;
  const trimmed = value.trim();
  return trimmed.length > 0 ? trimmed : undefined;
};

const authors = showMeta ? normalizeAuthors(data.authors) : [];
const published = showMeta ? toDate(data.date) : undefined;
const tags = showMeta ? normalizeTags(data.tags) : [];
const year = showMeta && isLibraryEntry ? toYear(data.year) : undefined;
const description = isLibraryEntry ? toDescription(data.description) : undefined;
---

<div class="page-title not-content">
  <h1 id={PAGE_TITLE_ID}>{entry.data.title}</h1>
  {showMeta && <ArticleMeta authors={authors} date={published} tags={tags} year={year} />}
  {description && <p class="page-title__description"><span class="page-title__description-label">Summary:</span> {description}</p>}
</div>

<style>
  @layer starlight.core {
    .page-title {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .page-title h1 {
      margin-top: 1rem;
      font-size: var(--sl-text-h1);
      line-height: var(--sl-line-height-headings);
      font-weight: 600;
      color: var(--sl-color-white);
    }

    .page-title :global(.article-meta) {
      margin-top: 0.5rem;
    }

    .page-title__description {
      margin: 0;
      color: var(--sl-color-text);
      font-size: 0.9rem;
      line-height: 1.55;
    }

    .page-title__description-label {
      font-weight: 600;
      font-size: 0.9rem;
      letter-spacing: 0.02em;
      margin-right: 0.35rem;
      color: var(--sl-color-text);
      text-transform: none;
    }
  }
</style>
